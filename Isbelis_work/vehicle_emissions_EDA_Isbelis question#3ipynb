{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "99329bb9-db52-420b-b84e-9ed0b8271049",
   "metadata": {},
   "outputs": [],
   "source": [
    "#dependences\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "from pathlib import Path\n",
    "from scipy import stats\n",
    "from scipy.stats import shapiro\n",
    "from scipy.stats import mannwhitneyu  # test for not normally distribution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "61ff4508-33cd-4dc9-9d04-38e695ba5569",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>car_id</th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>model</th>\n",
       "      <th>description</th>\n",
       "      <th>transmission</th>\n",
       "      <th>transmission_type</th>\n",
       "      <th>engine_size_cm3</th>\n",
       "      <th>fuel</th>\n",
       "      <th>powertrain</th>\n",
       "      <th>power_ps</th>\n",
       "      <th>co2_emissions_gPERkm</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>1.4 TJET 145bhp</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>161.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>1.4 TJET 145bhp</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>153.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 1.4 145 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>169.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 1.4 145 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>162.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 1.4 145 BHP Convertible</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>169.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 1.4 145 BHP Convertible</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>162.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 1.4 TJET 145 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>169.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 1.4 TJET 145 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>162.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Competizione 180 BHP Hatchback</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>180.0</td>\n",
       "      <td>171.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Competizione 180 BHP Hatchback</td>\n",
       "      <td>SAT5</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>180.0</td>\n",
       "      <td>172.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Competizione 1.4 TJET 180 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>180.0</td>\n",
       "      <td>171.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Competizione 1.4 TJET 180 BHP</td>\n",
       "      <td>SAT5</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>180.0</td>\n",
       "      <td>172.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Competizione 1.4 TJET 180 BHP Convertible</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>180.0</td>\n",
       "      <td>171.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Comperizione 1.4 TJET 180 BHP Convertible</td>\n",
       "      <td>SAT5</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>180.0</td>\n",
       "      <td>172.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Esseesse 1.4 TJET 180 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>180.0</td>\n",
       "      <td>171.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Esseesse 1.4 TJET 180 BHP Convertible</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>180.0</td>\n",
       "      <td>171.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Pista 1.4 TJET 165 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>171.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Pista 1.4 TJET 165 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>165.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Pista 1.4 TJET 165 BHP Convertible</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>171.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Pista 1.4 TJET 165 BHP Convertible</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>165.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>21.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 SCORPIONEORO 1.4 TJET 165bhp</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>171.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>22.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 SCORPIONEORO 1.4 TJET 165bhp</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>165.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>23.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Turismo 165 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>165.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>24.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Turismo 165 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>171.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>25.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Turismo 165 BHP Convertible</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>171.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>26.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Turismo 165 BHP Convertible</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>165.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>27.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Turismo 1.4 TJET 165 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>171.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>28.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Turismo 1.4 TJET 165 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>165.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>29.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Turismo 1.4 TJET 165 BHP</td>\n",
       "      <td>SAT5</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>177.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>30.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 Turismo 1.4 TJET 165 BHP</td>\n",
       "      <td>SAT5</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>165.0</td>\n",
       "      <td>162.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    car_id manufacturer model                                     description  \\\n",
       "0      1.0       ABARTH   595                                 1.4 TJET 145bhp   \n",
       "1      2.0       ABARTH   595                                 1.4 TJET 145bhp   \n",
       "2      3.0       ABARTH   595                                595 1.4 145 BHP    \n",
       "3      4.0       ABARTH   595                                 595 1.4 145 BHP   \n",
       "4      5.0       ABARTH   595                     595 1.4 145 BHP Convertible   \n",
       "5      6.0       ABARTH   595                     595 1.4 145 BHP Convertible   \n",
       "6      7.0       ABARTH   595                           595 1.4 TJET 145 BHP    \n",
       "7      8.0       ABARTH   595                            595 1.4 TJET 145 BHP   \n",
       "8      9.0       ABARTH   595              595 Competizione 180 BHP Hatchback   \n",
       "9     10.0       ABARTH   595              595 Competizione 180 BHP Hatchback   \n",
       "10    11.0       ABARTH   595              595 Competizione 1.4 TJET 180 BHP    \n",
       "11    12.0       ABARTH   595              595 Competizione 1.4 TJET 180 BHP    \n",
       "12    13.0       ABARTH   595   595 Competizione 1.4 TJET 180 BHP Convertible   \n",
       "13    14.0       ABARTH   595  595 Comperizione 1.4 TJET 180 BHP Convertible    \n",
       "14    15.0       ABARTH   595                   595 Esseesse 1.4 TJET 180 BHP   \n",
       "15    16.0       ABARTH   595      595 Esseesse 1.4 TJET 180 BHP Convertible    \n",
       "16    17.0       ABARTH   595                     595 Pista 1.4 TJET 165 BHP    \n",
       "17    18.0       ABARTH   595                     595 Pista 1.4 TJET 165 BHP    \n",
       "18    19.0       ABARTH   595         595 Pista 1.4 TJET 165 BHP Convertible    \n",
       "19    20.0       ABARTH   595         595 Pista 1.4 TJET 165 BHP Convertible    \n",
       "20    21.0       ABARTH   595                595 SCORPIONEORO 1.4 TJET 165bhp   \n",
       "21    22.0       ABARTH   595                595 SCORPIONEORO 1.4 TJET 165bhp   \n",
       "22    23.0       ABARTH   595                            595 Turismo 165 BHP    \n",
       "23    24.0       ABARTH   595                            595 Turismo 165 BHP    \n",
       "24    25.0       ABARTH   595                595 Turismo 165 BHP Convertible    \n",
       "25    26.0       ABARTH   595                595 Turismo 165 BHP Convertible    \n",
       "26    27.0       ABARTH   595                   595 Turismo 1.4 TJET 165 BHP    \n",
       "27    28.0       ABARTH   595                   595 Turismo 1.4 TJET 165 BHP    \n",
       "28    29.0       ABARTH   595                   595 Turismo 1.4 TJET 165 BHP    \n",
       "29    30.0       ABARTH   595                   595 Turismo 1.4 TJET 165 BHP    \n",
       "\n",
       "   transmission transmission_type  engine_size_cm3    fuel  \\\n",
       "0            M5            Manual           1368.0  Petrol   \n",
       "1            M5            Manual           1368.0  Petrol   \n",
       "2            M5            Manual           1368.0  Petrol   \n",
       "3            M5            Manual           1368.0  Petrol   \n",
       "4            M5            Manual           1368.0  Petrol   \n",
       "5            M5            Manual           1368.0  Petrol   \n",
       "6            M5            Manual           1368.0  Petrol   \n",
       "7            M5            Manual           1368.0  Petrol   \n",
       "8            M5            Manual           1368.0  Petrol   \n",
       "9          SAT5         Automatic           1368.0  Petrol   \n",
       "10           M5            Manual           1368.0  Petrol   \n",
       "11         SAT5         Automatic           1368.0  Petrol   \n",
       "12           M5            Manual           1368.0  Petrol   \n",
       "13         SAT5         Automatic           1368.0  Petrol   \n",
       "14           M5            Manual           1368.0  Petrol   \n",
       "15           M5            Manual           1368.0  Petrol   \n",
       "16           M5            Manual           1368.0  Petrol   \n",
       "17           M5            Manual           1368.0  Petrol   \n",
       "18           M5            Manual           1368.0  Petrol   \n",
       "19           M5            Manual           1368.0  Petrol   \n",
       "20           M5            Manual           1368.0  Petrol   \n",
       "21           M5            Manual           1368.0  Petrol   \n",
       "22           M5            Manual           1368.0  Petrol   \n",
       "23           M5            Manual           1368.0  Petrol   \n",
       "24           M5            Manual           1368.0  Petrol   \n",
       "25           M5            Manual           1368.0  Petrol   \n",
       "26           M5            Manual           1368.0  Petrol   \n",
       "27           M5            Manual           1368.0  Petrol   \n",
       "28         SAT5         Automatic           1368.0  Petrol   \n",
       "29         SAT5         Automatic           1368.0  Petrol   \n",
       "\n",
       "                          powertrain  power_ps  co2_emissions_gPERkm  \n",
       "0   Internal Combustion Engine (ICE)     145.0                 161.0  \n",
       "1   Internal Combustion Engine (ICE)     145.0                 153.0  \n",
       "2   Internal Combustion Engine (ICE)     145.0                 169.0  \n",
       "3   Internal Combustion Engine (ICE)     145.0                 162.0  \n",
       "4   Internal Combustion Engine (ICE)     145.0                 169.0  \n",
       "5   Internal Combustion Engine (ICE)     145.0                 162.0  \n",
       "6   Internal Combustion Engine (ICE)     145.0                 169.0  \n",
       "7   Internal Combustion Engine (ICE)     145.0                 162.0  \n",
       "8   Internal Combustion Engine (ICE)     180.0                 171.0  \n",
       "9   Internal Combustion Engine (ICE)     180.0                 172.0  \n",
       "10  Internal Combustion Engine (ICE)     180.0                 171.0  \n",
       "11  Internal Combustion Engine (ICE)     180.0                 172.0  \n",
       "12  Internal Combustion Engine (ICE)     180.0                 171.0  \n",
       "13  Internal Combustion Engine (ICE)     180.0                 172.0  \n",
       "14  Internal Combustion Engine (ICE)     180.0                 171.0  \n",
       "15  Internal Combustion Engine (ICE)     180.0                 171.0  \n",
       "16  Internal Combustion Engine (ICE)     165.0                 171.0  \n",
       "17  Internal Combustion Engine (ICE)     165.0                 165.0  \n",
       "18  Internal Combustion Engine (ICE)     165.0                 171.0  \n",
       "19  Internal Combustion Engine (ICE)     165.0                 165.0  \n",
       "20  Internal Combustion Engine (ICE)     165.0                 171.0  \n",
       "21  Internal Combustion Engine (ICE)     165.0                 165.0  \n",
       "22  Internal Combustion Engine (ICE)     165.0                 165.0  \n",
       "23  Internal Combustion Engine (ICE)     165.0                 171.0  \n",
       "24  Internal Combustion Engine (ICE)     165.0                 171.0  \n",
       "25  Internal Combustion Engine (ICE)     165.0                 165.0  \n",
       "26  Internal Combustion Engine (ICE)     165.0                 171.0  \n",
       "27  Internal Combustion Engine (ICE)     165.0                 165.0  \n",
       "28  Internal Combustion Engine (ICE)     165.0                 177.0  \n",
       "29  Internal Combustion Engine (ICE)     165.0                 162.0  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Define the path to the CSV file\n",
    "df_csv = \"uk_gov_data_sparse_preproc.csv\"\n",
    "\n",
    "# Read the CSV file into a DataFrame\n",
    "df = pd.read_csv(df_csv, encoding=\"ISO-8859-1\")\n",
    "\n",
    "# Create a copy of the DataFrame\n",
    "df_1 = df.copy()\n",
    "\n",
    "# Display the first 4 rows of the DataFrame\n",
    "df_1.head(30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c2b38719-7336-4425-a565-11cede00e332",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 6756 entries, 0 to 6755\n",
      "Data columns (total 11 columns):\n",
      " #   Column                Non-Null Count  Dtype  \n",
      "---  ------                --------------  -----  \n",
      " 0   car_id                6756 non-null   float64\n",
      " 1   manufacturer          6756 non-null   object \n",
      " 2   model                 6756 non-null   object \n",
      " 3   description           6756 non-null   object \n",
      " 4   transmission          6609 non-null   object \n",
      " 5   transmission_type     6756 non-null   object \n",
      " 6   engine_size_cm3       6755 non-null   float64\n",
      " 7   fuel                  6756 non-null   object \n",
      " 8   powertrain            6756 non-null   object \n",
      " 9   power_ps              6712 non-null   float64\n",
      " 10  co2_emissions_gPERkm  6756 non-null   float64\n",
      "dtypes: float64(4), object(7)\n",
      "memory usage: 580.7+ KB\n"
     ]
    }
   ],
   "source": [
    "# Many null values, we need to investigate\n",
    "df_1.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9a535d5e-0dbb-43b9-81a8-f6ff525fe6a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "car_id                    0\n",
       "manufacturer              0\n",
       "model                     0\n",
       "description               0\n",
       "transmission            147\n",
       "transmission_type         0\n",
       "engine_size_cm3           1\n",
       "fuel                      0\n",
       "powertrain                0\n",
       "power_ps                 44\n",
       "co2_emissions_gPERkm      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# look at missing value\n",
    "df_1.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a6696562-a77f-48f6-9b83-982d415de311",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       False\n",
       "1       False\n",
       "2       False\n",
       "3       False\n",
       "4       False\n",
       "        ...  \n",
       "6751    False\n",
       "6752    False\n",
       "6753    False\n",
       "6754    False\n",
       "6755    False\n",
       "Length: 6756, dtype: bool"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# look at duplcated value\n",
    "df_1.duplicated()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e75280ba-8516-4241-8270-0252fc9408a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>car_id</th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>model</th>\n",
       "      <th>description</th>\n",
       "      <th>transmission</th>\n",
       "      <th>transmission_type</th>\n",
       "      <th>engine_size_cm3</th>\n",
       "      <th>fuel</th>\n",
       "      <th>powertrain</th>\n",
       "      <th>power_ps</th>\n",
       "      <th>co2_emissions_gPERkm</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>912</th>\n",
       "      <td>913.0</td>\n",
       "      <td>FIAT</td>\n",
       "      <td>New 500</td>\n",
       "      <td>Action Electric 24kW 95hp</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Electric - Not Applicable</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Electricity</td>\n",
       "      <td>Battery Electric Vehicle (BEV) / Pure Electric...</td>\n",
       "      <td>70.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>913</th>\n",
       "      <td>914.0</td>\n",
       "      <td>FIAT</td>\n",
       "      <td>New 500</td>\n",
       "      <td>Icon Electric 42kW 118hp</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Electric - Not Applicable</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Electricity</td>\n",
       "      <td>Battery Electric Vehicle (BEV) / Pure Electric...</td>\n",
       "      <td>87.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>914</th>\n",
       "      <td>915.0</td>\n",
       "      <td>FIAT</td>\n",
       "      <td>New 500</td>\n",
       "      <td>Icon Electric 42kW 118hp</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Electric - Not Applicable</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Electricity</td>\n",
       "      <td>Battery Electric Vehicle (BEV) / Pure Electric...</td>\n",
       "      <td>87.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>915</th>\n",
       "      <td>916.0</td>\n",
       "      <td>FIAT</td>\n",
       "      <td>New 500</td>\n",
       "      <td>La Prima Electric 42kW 118hp</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Electric - Not Applicable</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Electricity</td>\n",
       "      <td>Battery Electric Vehicle (BEV) / Pure Electric...</td>\n",
       "      <td>87.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916</th>\n",
       "      <td>917.0</td>\n",
       "      <td>FIAT</td>\n",
       "      <td>New 500</td>\n",
       "      <td>La Prima Electric 42kW 118hp</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Electric - Not Applicable</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Electricity</td>\n",
       "      <td>Battery Electric Vehicle (BEV) / Pure Electric...</td>\n",
       "      <td>87.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     car_id manufacturer    model                   description transmission  \\\n",
       "912   913.0         FIAT  New 500     Action Electric 24kW 95hp          NaN   \n",
       "913   914.0         FIAT  New 500      Icon Electric 42kW 118hp          NaN   \n",
       "914   915.0         FIAT  New 500      Icon Electric 42kW 118hp          NaN   \n",
       "915   916.0         FIAT  New 500  La Prima Electric 42kW 118hp          NaN   \n",
       "916   917.0         FIAT  New 500  La Prima Electric 42kW 118hp          NaN   \n",
       "\n",
       "             transmission_type  engine_size_cm3         fuel  \\\n",
       "912  Electric - Not Applicable              0.0  Electricity   \n",
       "913  Electric - Not Applicable              0.0  Electricity   \n",
       "914  Electric - Not Applicable              0.0  Electricity   \n",
       "915  Electric - Not Applicable              0.0  Electricity   \n",
       "916  Electric - Not Applicable              0.0  Electricity   \n",
       "\n",
       "                                            powertrain  power_ps  \\\n",
       "912  Battery Electric Vehicle (BEV) / Pure Electric...      70.0   \n",
       "913  Battery Electric Vehicle (BEV) / Pure Electric...      87.0   \n",
       "914  Battery Electric Vehicle (BEV) / Pure Electric...      87.0   \n",
       "915  Battery Electric Vehicle (BEV) / Pure Electric...      87.0   \n",
       "916  Battery Electric Vehicle (BEV) / Pure Electric...      87.0   \n",
       "\n",
       "     co2_emissions_gPERkm  \n",
       "912                   0.0  \n",
       "913                   0.0  \n",
       "914                   0.0  \n",
       "915                   0.0  \n",
       "916                   0.0  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_1[df_1.transmission_type==\"Electric - Not Applicable\"].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "eb1bab05-0b28-44a9-9feb-7253290bbeef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>car_id</th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>model</th>\n",
       "      <th>description</th>\n",
       "      <th>transmission</th>\n",
       "      <th>transmission_type</th>\n",
       "      <th>engine_size_cm3</th>\n",
       "      <th>fuel</th>\n",
       "      <th>powertrain</th>\n",
       "      <th>power_ps</th>\n",
       "      <th>co2_emissions_gPERkm</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>1.4 TJET 145bhp</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>161.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>1.4 TJET 145bhp</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>153.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 1.4 145 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>169.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 1.4 145 BHP</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>162.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>ABARTH</td>\n",
       "      <td>595</td>\n",
       "      <td>595 1.4 145 BHP Convertible</td>\n",
       "      <td>M5</td>\n",
       "      <td>Manual</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Internal Combustion Engine (ICE)</td>\n",
       "      <td>145.0</td>\n",
       "      <td>169.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6751</th>\n",
       "      <td>6752.0</td>\n",
       "      <td>VOLVO</td>\n",
       "      <td>XC90, MY22</td>\n",
       "      <td>Recharge T8 Plug-in Hybrid Inscription Pro</td>\n",
       "      <td>8A-AWD</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>1969.0</td>\n",
       "      <td>Electricity / Petrol</td>\n",
       "      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n",
       "      <td>390.0</td>\n",
       "      <td>76.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6752</th>\n",
       "      <td>6753.0</td>\n",
       "      <td>VOLVO</td>\n",
       "      <td>XC90, MY22</td>\n",
       "      <td>Recharge T8 Plug-in Hybrid R-Design</td>\n",
       "      <td>8A-AWD</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>1969.0</td>\n",
       "      <td>Electricity / Petrol</td>\n",
       "      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n",
       "      <td>390.0</td>\n",
       "      <td>57.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6753</th>\n",
       "      <td>6754.0</td>\n",
       "      <td>VOLVO</td>\n",
       "      <td>XC90, MY22</td>\n",
       "      <td>Recharge T8 Plug-in Hybrid R-Design</td>\n",
       "      <td>8A-AWD</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>1969.0</td>\n",
       "      <td>Electricity / Petrol</td>\n",
       "      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n",
       "      <td>390.0</td>\n",
       "      <td>76.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6754</th>\n",
       "      <td>6755.0</td>\n",
       "      <td>VOLVO</td>\n",
       "      <td>XC90, MY22</td>\n",
       "      <td>Recharge T8 Plug-in Hybrid R-Design Pro</td>\n",
       "      <td>8A-AWD</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>1969.0</td>\n",
       "      <td>Electricity / Petrol</td>\n",
       "      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n",
       "      <td>390.0</td>\n",
       "      <td>57.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6755</th>\n",
       "      <td>6756.0</td>\n",
       "      <td>VOLVO</td>\n",
       "      <td>XC90, MY22</td>\n",
       "      <td>Recharge T8 Plug-in Hybrid R-Design Pro</td>\n",
       "      <td>8A-AWD</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>1969.0</td>\n",
       "      <td>Electricity / Petrol</td>\n",
       "      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n",
       "      <td>390.0</td>\n",
       "      <td>76.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6654 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      car_id manufacturer       model  \\\n",
       "0        1.0       ABARTH         595   \n",
       "1        2.0       ABARTH         595   \n",
       "2        3.0       ABARTH         595   \n",
       "3        4.0       ABARTH         595   \n",
       "4        5.0       ABARTH         595   \n",
       "...      ...          ...         ...   \n",
       "6751  6752.0        VOLVO  XC90, MY22   \n",
       "6752  6753.0        VOLVO  XC90, MY22   \n",
       "6753  6754.0        VOLVO  XC90, MY22   \n",
       "6754  6755.0        VOLVO  XC90, MY22   \n",
       "6755  6756.0        VOLVO  XC90, MY22   \n",
       "\n",
       "                                     description transmission  \\\n",
       "0                                1.4 TJET 145bhp           M5   \n",
       "1                                1.4 TJET 145bhp           M5   \n",
       "2                               595 1.4 145 BHP            M5   \n",
       "3                                595 1.4 145 BHP           M5   \n",
       "4                    595 1.4 145 BHP Convertible           M5   \n",
       "...                                          ...          ...   \n",
       "6751  Recharge T8 Plug-in Hybrid Inscription Pro       8A-AWD   \n",
       "6752         Recharge T8 Plug-in Hybrid R-Design       8A-AWD   \n",
       "6753         Recharge T8 Plug-in Hybrid R-Design       8A-AWD   \n",
       "6754     Recharge T8 Plug-in Hybrid R-Design Pro       8A-AWD   \n",
       "6755     Recharge T8 Plug-in Hybrid R-Design Pro       8A-AWD   \n",
       "\n",
       "     transmission_type  engine_size_cm3                  fuel  \\\n",
       "0               Manual           1368.0                Petrol   \n",
       "1               Manual           1368.0                Petrol   \n",
       "2               Manual           1368.0                Petrol   \n",
       "3               Manual           1368.0                Petrol   \n",
       "4               Manual           1368.0                Petrol   \n",
       "...                ...              ...                   ...   \n",
       "6751         Automatic           1969.0  Electricity / Petrol   \n",
       "6752         Automatic           1969.0  Electricity / Petrol   \n",
       "6753         Automatic           1969.0  Electricity / Petrol   \n",
       "6754         Automatic           1969.0  Electricity / Petrol   \n",
       "6755         Automatic           1969.0  Electricity / Petrol   \n",
       "\n",
       "                                  powertrain  power_ps  co2_emissions_gPERkm  \n",
       "0           Internal Combustion Engine (ICE)     145.0                 161.0  \n",
       "1           Internal Combustion Engine (ICE)     145.0                 153.0  \n",
       "2           Internal Combustion Engine (ICE)     145.0                 169.0  \n",
       "3           Internal Combustion Engine (ICE)     145.0                 162.0  \n",
       "4           Internal Combustion Engine (ICE)     145.0                 169.0  \n",
       "...                                      ...       ...                   ...  \n",
       "6751  Plug-in Hybrid Electric Vehicle (PHEV)     390.0                  76.0  \n",
       "6752  Plug-in Hybrid Electric Vehicle (PHEV)     390.0                  57.0  \n",
       "6753  Plug-in Hybrid Electric Vehicle (PHEV)     390.0                  76.0  \n",
       "6754  Plug-in Hybrid Electric Vehicle (PHEV)     390.0                  57.0  \n",
       "6755  Plug-in Hybrid Electric Vehicle (PHEV)     390.0                  76.0  \n",
       "\n",
       "[6654 rows x 11 columns]"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_1[df_1['transmission_type'] != 'Electric - Not Applicable']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c7c609a7-ef57-4c54-98d1-8d21fecb7b10",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>car_id</th>\n",
       "      <th>engine_size_cm3</th>\n",
       "      <th>power_ps</th>\n",
       "      <th>co2_emissions_gPERkm</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>6756.000000</td>\n",
       "      <td>6755.000000</td>\n",
       "      <td>6712.000000</td>\n",
       "      <td>6756.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>3378.500000</td>\n",
       "      <td>1793.553516</td>\n",
       "      <td>185.494636</td>\n",
       "      <td>154.775607</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1950.433542</td>\n",
       "      <td>825.695652</td>\n",
       "      <td>109.098685</td>\n",
       "      <td>54.972233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1689.750000</td>\n",
       "      <td>1333.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>131.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3378.500000</td>\n",
       "      <td>1749.000000</td>\n",
       "      <td>150.000000</td>\n",
       "      <td>151.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>5067.250000</td>\n",
       "      <td>1996.000000</td>\n",
       "      <td>218.000000</td>\n",
       "      <td>179.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>6756.000000</td>\n",
       "      <td>6749.000000</td>\n",
       "      <td>800.000000</td>\n",
       "      <td>380.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            car_id  engine_size_cm3     power_ps  co2_emissions_gPERkm\n",
       "count  6756.000000      6755.000000  6712.000000           6756.000000\n",
       "mean   3378.500000      1793.553516   185.494636            154.775607\n",
       "std    1950.433542       825.695652   109.098685             54.972233\n",
       "min       1.000000         0.000000     0.000000              0.000000\n",
       "25%    1689.750000      1333.000000   120.000000            131.000000\n",
       "50%    3378.500000      1749.000000   150.000000            151.000000\n",
       "75%    5067.250000      1996.000000   218.000000            179.250000\n",
       "max    6756.000000      6749.000000   800.000000            380.000000"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_1.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7402232e-7fa8-4f92-821b-e87a3177c195",
   "metadata": {},
   "outputs": [],
   "source": [
    "##Question 3: Are CO2 emissions different depending on the type of vehicle transmission?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "c82dcb10-45a3-4e36-af68-d50302c4a510",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CO2 emissions for Manual transmission type are not normally distributed\n",
      "CO2 emissions for Automatic transmission type are not normally distributed\n"
     ]
    }
   ],
   "source": [
    "## Descriptive distribution my variables\n",
    "\n",
    "for transmission in transmission_types:\n",
    "    if transmission != \"Electric - Not Applicable\":\n",
    "        data = df_1[df_1['transmission_type'] == transmission]['co2_emissions_gPERkm']\n",
    "        # Test for normality using Shapiro-Wilk test\n",
    "        stat, p = stats.shapiro(df_1)\n",
    "        alpha = 0.05\n",
    "        if p > alpha:\n",
    "            print(f\"CO2 emissions for {transmission} transmission type are normally distributed\")\n",
    "        else:\n",
    "            print(f\"CO2 emissions for {transmission} transmission type are not normally distributed\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "be96b4dc-8f75-485a-be89-3b9e93a0e2b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.violinplot(x='transmission_type', y='co2_emissions_gPERkm', data=df_emissions_clean,width=1, palette=[\"#5579c6\",\"#db222a\"])\n",
    "plt.title('CO2 Emissions by Transmission Type')\n",
    "plt.xlabel('Transmission Type')\n",
    "plt.ylabel('CO2 Emissions (g/km)')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "307bf433-6168-4381-a4f8-8bd59a06dbb0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Separate data by transmission type\n",
    "manual = df_1[df_1['transmission_type'] == 'Manual']['co2_emissions_gPERkm']\n",
    "automatic = df_1[df_1[\"transmission_type\"] == \"Automatic\"]['co2_emissions_gPERkm']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "dd93e85d-1e16-4c50-ae9b-654990a0ced2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mann-Whitney U test: U statistic=3485012.0, p-value=8.625650157963908e-92\n"
     ]
    }
   ],
   "source": [
    "u_stat, u_p_value = mannwhitneyu(manual, automatic)\n",
    "print(f'Mann-Whitney U test: U statistic={u_stat}, p-value={u_p_value}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0cec8522-d46f-4ac1-9ef9-a9db208f4884",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
